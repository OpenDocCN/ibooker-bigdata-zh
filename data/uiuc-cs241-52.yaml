- en: IPC Review Questions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPC复习问题
- en: Topics
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主题
- en: Virtual Memory Page Table MMU/TLB Address Translation Page Faults Frames/Pages
    Single level vs multi level page table Calculating offsets for multi-level page
    table Pipes Pipe read write ends Writing to a zero reader pipe Reading from a
    zero writer pipe Named pipe and Unnamed Pipes Buffer Size/Atomicity Scheduling
    Algorithms Measures of Efficiency
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟内存页表MMU/TLB地址转换页面错误帧/页单级与多级页表计算多级页表的偏移管道管道读写端写入零读取管道从零写入管道命名管道和无命名管道缓冲区大小/原子性调度算法效率衡量
- en: Questions
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: What is virtual memory?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟内存是什么？
- en: What are the following and what is their purpose?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是什么以及它们的目的是什么？
- en: Translation Lookaside Buffer
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 翻译旁路缓冲区
- en: Physical Address
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理地址
- en: Memory Management Unit. Multilevel page table. Frame number. Page number and
    page offset.
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存管理单元。多级页表。帧号。页号和页偏移。
- en: The dirty bit
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脏位
- en: The NX Bit
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: NX位
- en: What is a page table? How about a physical frame? Does a page always need to
    point to a physical frame?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是页表？物理帧呢？页面是否总是需要指向物理帧？
- en: What is a page fault? What are the types? When does it result in a segfault?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是页面错误？有哪些类型？什么时候会导致段错误？
- en: What are the advantages to a single level page table? Disadvantages? How about
    a multi leveled table?
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单级页表有什么优点？缺点？多级表呢？
- en: What does a multi leveled table look like in memory?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多级表在内存中是什么样子的？
- en: How do you determine how many bits are used in the page offset?
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定页面偏移中使用了多少位？
- en: Given a 64 bit address space, 4kb pages and frames, and a 3 level page table,
    how many bits is the Virtual page number 1, VPN2, VPN3 and the offset?
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给定64位地址空间，4kb页和帧，以及3级页表，虚拟页号1，VPN2，VPN3和偏移分别有多少位？
- en: What is a pipe? How do I create a pipe?
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是管道？如何创建管道？
- en: When is SIGPIPE delivered to a process?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SIGPIPE是在什么时候传递给进程的？
- en: Under what conditions will calling read() on a pipe block? Under what conditions
    will read() immediately return 0
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在什么条件下调用管道上的read()会阻塞？在什么条件下read()会立即返回0？
- en: What is the difference between a named pipe and an unnamed pipe?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名管道和无命名管道之间有什么区别？
- en: Is a pipe thread safe?
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管道是线程安全的吗？
- en: Write a function that uses fseek and ftell to replace the middle character of
    a file with an 'X'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个使用fseek和ftell来用'X'替换文件的中间字符的函数
- en: Write a function that create a pipe and uses write to send 5 bytes, "HELLO"
    to the pipe. Return the read file descriptor of the pipe.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个创建管道并使用write发送5个字节“HELLO”到管道的函数。返回管道的读文件描述符。
- en: What happens when you mmap a file?
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您mmap文件时会发生什么？
- en: Why is getting the file size with ftell not recommended? How should you do it
    instead?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么不建议使用ftell获取文件大小？应该如何替代？
- en: What is scheduling?
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是调度？
- en: What is turnaround time? Response Time? Wait time?
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 周转时间是什么？响应时间？等待时间？
- en: What is the convoy effect?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是护航效应？
- en: Which algorithms have the best turnaround/response/wait time on average
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些算法平均具有最佳的周转/响应/等待时间

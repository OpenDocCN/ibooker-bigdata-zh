- en: 'File System, Part 8: Removing preinstalled malware from an Android device'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统，第8部分：从安卓设备中删除预装的恶意软件
- en: 'Case study: Removing malware from an Android device'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 案例研究：从安卓设备中删除恶意软件
- en: This section uses filesystem features and system programming tools discussed
    in this wikibook to find and remove unwanted malware from an Android tablet.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节利用本wikibook中讨论的文件系统特性和系统编程工具来查找并删除安卓平板电脑中的不需要的恶意软件。
- en: DISCLAIMER. ENSURE ANY VALUABLE INFORMATION ON YOUR DEVICE IS BACKED UP BEFORE
    ATTEMPTING TO MODIFY YOUR TABLET. MODIFYING SYSTEM SETTINGS AND SYSTEM FILES IS
    NOT RECOMMENDED. ATTEMPTING TO MODIFY A DEVICE USING THIS CASE STUDU GUIDE MAY
    CAUSE YOUR TABLET TO SHARE, LOSE OR CORRUPT YOUR DATA. FURTHER YOUR TABLET MAY
    FUNCTION INCORRECTLY OR TO STOP FUNCTIONING ALTOGETHER. USE THIS CASE STUDY AT
    YOUR OWN RISK. THE AUTHORS ASSUME NO RESPONSIBILITY AND MAKE NO WARRANTY ABOUT
    THE CORRECTNESS OR COMPLETENESS OF THESE INSTRUCTIONS INCLUDED IN THIS CASE STUDY.
    THE AUTHORS ASSUME NO RESPONSIBILITY AND MAKE NO WARRANTY ABOUT ANY SOFTWARE INCLUDING
    EXTERNAL THIRD PARTY SOFTWARE DESCRIBED OR LINKED TO IN THIS GUIDE.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 免责声明。在尝试修改您的平板电脑之前，请确保备份设备上的任何有价值的信息。不建议修改系统设置和系统文件。尝试使用本案例研究指南修改设备可能导致您的平板电脑共享、丢失或损坏数据。此外，您的平板电脑可能会出现功能异常或完全停止工作。请自行承担使用本案例研究的风险。作者对这些指南中包含的指令的正确性或完整性不承担任何责任并不提供任何保证。作者对本指南中描述或链接的任何软件，包括外部第三方软件，不承担任何责任并不提供任何保证。
- en: Background
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 背景
- en: An E97 Android tablet purchased from Amazon had developed some peculiar quirks.
    Most noticeable was that the browser app always opened a website at gotoamazing.com
    rather than the home page set in the app's preferences (known as browser 'hijacking').
    Can we use the knowledge from this wikibook to understand how this unwanted behavior
    occurs and also remove unwanted pre-installed apps from the device?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从亚马逊购买的E97安卓平板电脑出现了一些奇怪的毛病。最明显的是，浏览器应用程序总是在gotoamazing.com打开一个网站，而不是在应用程序的首选项中设置的主页（称为浏览器“劫持”）。我们能否利用这本wikibook中的知识来理解这种不需要的行为是如何发生的，还能从设备中删除不需要的预装应用程序？
- en: Tools used
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的工具
- en: While it is possible to use the Android developer tools installed on a remote
    USB-connected machine, this guide uses only system tools on the tablet. The following
    apps were installed -
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可能可以使用远程连接的USB设备上安装的安卓开发工具，但本指南仅使用平板电脑上的系统工具。安装了以下应用程序 -
- en: Malwarebytes - A free vulnerability and malware tool.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Malwarebytes - 一个免费的漏洞和恶意软件工具。
- en: Terminal emulator - A simple terminal window that gives us shell access on the
    tablet.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终端模拟器 - 一个简单的终端窗口，让我们在平板电脑上获得shell访问权限。
- en: KingRoot - A tool that uses known exploits in the linux kernel to gain root
    access.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KingRoot - 一个利用Linux内核中已知漏洞获取root权限的工具。
- en: Installing any app can potentially allow arbitrary code to be executed if it
    is able to break out of the Android security model. Of the apps mentioned above,
    KingRoot is the most extreme example because it exploits system vulnerabilities
    to gain root access for our purposes. However in doing so, it could also Of these,
    KingRoot is the most questionable tool to install - we are trusting it not to
    install any of its own malware. A potentially safer alternative is to use [https://github.com/android-rooting-tools/](https://github.com/android-rooting-tools/)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 安装任何应用都可能允许任意代码执行，如果它能够突破安卓安全模型。在上面提到的应用中，KingRoot是最极端的例子，因为它利用系统漏洞来获取我们的目的的root权限。然而，在这样做的同时，它也可能是最有问题的工具之一，我们要相信它不会安装任何自己的恶意软件。一个潜在更安全的选择是使用[https://github.com/android-rooting-tools/](https://github.com/android-rooting-tools/)
- en: Overview of terminal
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 终端概述
- en: The most useful commands are `su grep mount` and Android's package manager tool,
    `pm`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最有用的命令是`su grep mount`和安卓的包管理器工具`pm`。
- en: grep -s abc * */* (search for `abc` in current directory and immediate sub directories)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: grep -s abc * */*（在当前目录和直接子目录中搜索`abc`）
- en: su ( aka "switch user" become root - requires a rooted device)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: su（又名“切换用户”成为root - 需要一个已root的设备）
- en: mount -o rw,remount /system (allow /system partition to be writeable)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mount -o rw,remount /system（允许/system分区可写）
- en: pm disable (aka 'package manager' disable an Android app package)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pm disable（又名“包管理器”禁用安卓应用程序包）
- en: Overview of filesystem layout
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件系统布局概述
- en: On this specific tablet that runs Android 4.4.2, pre-installed apps are unmodifiable
    and are located in
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行安卓4.4.2的这个特定平板电脑上，预装的应用程序是不可修改的，并且位于
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: and preferences and app-data are stored in the `/data` partition Each app is
    typically packaged inside an apk file, which is essentially a zip file. When an
    app is installed the code is expanded into a file that can be directly parsed
    by the Android virtual machine. The binary code (at least for this particular
    virtual machine) has an odex extension.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 偏好设置和应用数据存储在`/data`分区中。每个应用程序通常打包在一个apk文件中，这本质上是一个zip文件。当应用程序安装时，代码会被扩展成一个可以被安卓虚拟机直接解析的文件。二进制代码（至少对于这个特定的虚拟机）具有odex扩展名。
- en: We can search the code of the installed system apps for the string 'gotoamazing'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以搜索已安装的系统应用程序的代码，查找字符串'gotoamazing'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This didn't find anything; it appears this string was not hardcoded into the
    source code of the given system apps. To verify that we can find
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这没有找到任何东西；看来这个字符串没有硬编码到给定系统应用程序的源代码中。为了验证我们是否能找到
- en: Let's check the data area of all installed apps
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查所有已安装应用的数据区域
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: produced the following
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 产生了以下结果
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The -s option "silent option" stops grep from complaining about trying to grep
    directories and other invalid files. Note we could have also used -r to recursively
    search directories but it was fun to use file globbing (wildcard expansion of
    the * by the shell).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: -s选项“静默选项”可以阻止grep抱怨尝试grep目录和其他无效文件。请注意，我们也可以使用-r来递归搜索目录，但使用文件通配符（shell的*通配符扩展）很有趣。
- en: Now we are getting somewhere! It looks like this string is part of the app 'com.android.browser'
    but let's also find out which app binary code opens the 'xbservice' preference.
    Perhaps this unwanted service is hiding inside another app and managed to secretly
    load as an extension to the browser?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了进展！看起来这个字符串是'app'com.android.browser'的一部分，但让我们也找出哪个应用程序二进制代码打开了'xbservice'首选项。也许这个不受欢迎的服务隐藏在另一个应用程序中，并且成功地作为浏览器的扩展秘密加载？
- en: Let's look for any file that contains xbservice. This time we will recursively
    search in the directories of /system that include the 'app'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们寻找包含xbservice的任何文件。这次，我们将在包括'app'的/system目录中递归搜索
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Finally - it appears the factory browser was shipped with the the home page
    hijacking pre-installed. Let's uninstall it. For this, let's become root.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后 - 看起来出厂浏览器已经预装了主页劫持。让我们卸载它。为此，让我们成为root。
- en: '` $ su'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: $ su
- en: pm list packages -s
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pm list packages -s
- en: '` Android''s package manager has many commands and options. The above example
    lists all currently installed system apps. We can uninstall the browser app using
    the following command'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Android的包管理器有许多命令和选项。上面的例子列出了当前安装的所有系统应用程序。我们可以使用以下命令卸载浏览器应用程序
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using `pm list packages` you can list all installed packages (use `-s` options
    to see just system packages). We disabled the following system apps. Of course
    there is no real guarantee that we successfully removed all unwanted software,
    or that one of these is a false-positive. As such we would not recommend keeping
    sensitive information on such a tablet.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pm list packages`可以列出所有安装的软件包（使用`-s`选项只查看系统软件包）。我们禁用了以下系统应用程序。当然，我们无法保证我们成功删除了所有不需要的软件，或者其中一个是误报。因此，我们不建议在这样的平板电脑上存储敏感信息。
- en: com.android.browser
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.android.browser
- en: com.adups.fota.sysoper
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.adups.fota.sysoper
- en: elink.com
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: elink.com
- en: com.google.android.apps.cloudprint
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.google.android.apps.cloudprint
- en: com.mediatek.CrashService
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.mediatek.CrashService
- en: com.get.googleApps
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.get.googleApps
- en: com.adups.fota (an over-the-air package that can install arbitrary items in
    the future).
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.adups.fota（可以在将来安装任意项目的远程包）。
- en: com.mediatek.appguide.plugin
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: com.mediatek.appguide.plugin
- en: It is likely that you could just re-enable a package using `pm enable package-name`
    or `pm install` and the relevant .apk file in /system/app or /system/priv-app
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能你可以使用`pm enable package-name`或`pm install`和/system/app或/system/priv-app中的相关.apk文件来重新启用软件包。

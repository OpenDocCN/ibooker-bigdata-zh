- en: Synchronization Review Questions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同步复习问题
- en: Topics
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主题
- en: Atomic operations
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原子操作
- en: Critical Section
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 临界区
- en: Producer Consumer Problem
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产者消费者问题
- en: Using Condition Variables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用条件变量
- en: Using Counting Semaphore
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用计数信号量
- en: Implementing a barrier
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现一个屏障
- en: Implementing a ring buffer
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现环形缓冲区
- en: Using pthread_mutex
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用pthread_mutex
- en: Implementing producer consumer
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现生产者消费者
- en: Analyzing multi-threaded coded
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析多线程代码
- en: Questions
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: What is atomic operation?
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是原子操作？
- en: Why will the following not work in parallel code
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么以下内容在并行代码中不起作用？
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: And this will?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这将会是什么？
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'What are some downsides to atomic operations? What would be faster: keeping
    a local variable or many atomic operations?'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原子操作有哪些缺点？哪个更快：保留一个本地变量还是进行多个原子操作？
- en: What is the critical section?
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是临界区？
- en: Once you have identified a critical section, what is one way of assuring that
    only one thread will be in the section at a time?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦确定了临界区，保证只有一个线程会进入该区域的一种方法是什么？
- en: Identify the critical section here
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这里确定临界区
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How tight can you make the critical section?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 临界区可以有多紧凑？
- en: What is a producer consumer problem? How might the above be a producer consumer
    problem be used in the above section? How is a producer consumer problem related
    to a reader writer problem?
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是生产者消费者问题？以上述部分如何成为生产者消费者问题？生产者消费者问题与读者写者问题有什么关系？
- en: What is a condition variable? Why is there an advantage to using one over a
    `while` loop?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是条件变量？为什么使用条件变量比使用“while”循环更有优势？
- en: Why is this code dangerous?
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么这段代码很危险？
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What is a counting semaphore? Give me an analogy to a cookie jar/pizza box/limited
    food item.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是计数信号量？给我一个类似于饼干罐/比萨盒/有限食物的比喻。
- en: What is a thread barrier?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是线程屏障？
- en: Use a counting semaphore to implement a barrier.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用计数信号量来实现屏障。
- en: Write up a Producer/Consumer queue, How about a producer consumer stack?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个生产者/消费者队列，再来一个生产者/消费者栈？
- en: Give me an implementation of a reader-writer lock with condition variables,
    make a struct with whatever you need, it just needs to be able to support the
    following functions
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给我一个使用条件变量的读者-写者锁的实现，使用你需要的任何结构，它只需要支持以下函数
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The only specification is that in between `reader_lock` and `reader_unlock`,
    no writers can write. In between the writer locks, only one writer may be writing
    at a time.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的规定是在“reader_lock”和“reader_unlock”之间，没有写者可以写。在写者锁之间，只有一个写者可以一次写作。
- en: Write code to implement a producer consumer using ONLY three counting semaphores.
    Assume there can be more than one thread calling enqueue and dequeue. Determine
    the initial value of each semaphore.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写代码使用仅三个计数信号量实现生产者消费者。假设可以有多个线程调用enqueue和dequeue。确定每个信号量的初始值。
- en: Write code to implement a producer consumer using condition variables and a
    mutex. Assume there can be more than one thread calling enqueue and dequeue.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写代码使用条件变量和互斥锁实现生产者消费者。假设可以有多个线程调用enqueue和dequeue。
- en: Use CVs to implement add(unsigned int) and subtract(unsigned int) blocking functions
    that never allow the global value to be greater than 100.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CVs实现add(unsigned int)和subtract(unsigned int)阻塞函数，永远不允许全局值大于100。
- en: Use CVs to implement a barrier for 15 threads.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CVs为15个线程实现一个屏障。
- en: How many of the following statements are true?
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下陈述有多少是真的？
- en: There can be multiple active readers
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以有多个活跃的读者
- en: There can be multiple active writers
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以有多个活跃的写者
- en: When there is an active writer the number of active readers must be zero
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当有活跃的写者时，活跃的读者数量必须为零
- en: If there is an active reader the number of active writers must be zero
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有活跃的读者，则活跃的写者数量必须为零
- en: A writer must wait until the current active readers have finished
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个写者必须等到当前活跃的读者完成
- en: 'Todo: Analyzing mulithreaded code snippets'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 待办事项：分析多线程代码片段

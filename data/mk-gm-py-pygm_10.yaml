- en: Chapter 10 – Four Extra Games
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章-四个额外游戏
- en: 原文：[https://inventwithpython.com/pygame/chapter10.html](https://inventwithpython.com/pygame/chapter10.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://inventwithpython.com/pygame/chapter10.html](https://inventwithpython.com/pygame/chapter10.html)
- en: Included in this chapter is the source code for four extra games. Unfortunately,
    only the source code (including comments) is in this chapter without any detailed
    explanation of the code. By now, you can play these games and figure out how the
    code works by looking at the source code and comments.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括四个额外游戏的源代码。不幸的是，本章中只有源代码（包括注释），没有对代码的详细解释。到目前为止，您可以通过查看源代码和注释来玩这些游戏并弄清楚代码的工作原理。
- en: 'The games are:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这些游戏包括：
- en: · **Flippy** – An “Othello” clone where the player tries to flip the computer
    AI player’s tiles.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: · **Flippy** – 一个“Othello”克隆，玩家试图翻转计算机AI玩家的方块。
- en: · **Ink Spill** – A “Flood It” clone that makes use of the flood fill algorithm.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: · **Ink Spill** – 一个使用泛洪填充算法的“Flood It”克隆。
- en: · **Four in a Row** – A “Connect Four” clone against the computer AI player.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: · **Four in a Row** – 一个“Connect Four”克隆，与计算机AI玩家对战。
- en: · **Gemgem** – A “Bejeweled” clone where the player swaps gems to try to get
    three identical gems in a row.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: · **Gemgem** – 一个“Bejeweled”克隆，玩家交换宝石以尝试获得三个相同的宝石排成一行。
- en: If you have any questions about the source code in this book, feel free to email
    the author at [[email protected]](/cdn-cgi/l/email-protection).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书中的源代码有任何疑问，请随时通过电子邮件联系作者[[email protected]](/cdn-cgi/l/email-protection)。
- en: 'Buggy versions of these programs are also available if you want to practice
    fixing bugs:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想练习修复错误，这些程序的错误版本也是可用的：
- en: · [http://invpy.com/buggy/flippy](//invpy.com/buggy/flippy)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/buggy/flippy](//invpy.com/buggy/flippy)
- en: · [http://invpy.com/buggy/inkspill](//invpy.com/buggy/inkspill)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/buggy/inkspill](//invpy.com/buggy/inkspill)
- en: · [http://invpy.com/buggy/fourinarow](//invpy.com/buggy/fourinarow)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/buggy/fourinarow](//invpy.com/buggy/fourinarow)
- en: · [http://invpy.com/buggy/gemgem](//invpy.com/buggy/gemgem)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/buggy/gemgem](//invpy.com/buggy/gemgem)
- en: Flippy, an “Othello” Clone
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flippy，一个“Othello”克隆
- en: '![](../Images/7ec3014bca08a4e733eaf2afb9221ea6.png)     ![](../Images/f43a579f7f8f0385f39cfccd72d8c3c4.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ec3014bca08a4e733eaf2afb9221ea6.png)     ![](../Images/f43a579f7f8f0385f39cfccd72d8c3c4.png)'
- en: Othello, also known by the generic name Reversi, has an 8 x 8 board with tiles
    that are black on one side and white on the other. The starting board looks like
    Figure 10-1\. Each player takes turn placing down a new tile of their color. Any
    of the opponent's tiles that are between the new tile and the other tiles of that
    color is flipped. The goal of the game is to have as many of the tiles with your
    color as possible. For example, Figure 10-2 is what it looks like if the white
    player places a new white tile on space 5, 6.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Othello，也被称为Reversi，是一个8x8的棋盘，棋子一面是黑色，另一面是白色。起始棋盘如图10-1所示。每个玩家轮流放置自己颜色的新方块。任何处于新方块和同色其他方块之间的对手方块都会被翻转。游戏的目标是尽可能多地拥有自己颜色的方块。例如，图10-2是当白方在5,
    6处放置一个新的白色方块时的情况。
- en: '| ![Description: C:\book1svn\4thed\images\15-1.webp](../Images/a457be60d812f6e73f76064de344c266.png)
    | ![Description: C:\book1svn\4thed\images\15-2.webp](../Images/a4569578eb91173ec8bd68026d8919dd.png)
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| ![Description: C:\book1svn\4thed\images\15-1.webp](../Images/a457be60d812f6e73f76064de344c266.png)
    | ![Description: C:\book1svn\4thed\images\15-2.webp](../Images/a4569578eb91173ec8bd68026d8919dd.png)
    |'
- en: '| The starting Reversi board has two white tiles and two black tiles. | White
    places a new tile. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| Reversi游戏的起始棋盘上有两个白色方块和两个黑色方块。| 白方放置一个新方块。|'
- en: The black tile at 5, 5 is in between the new white tile and the existing white
    tile at 5, 4\. That black tile is flipped over and becomes a new white tile, making
    the board look like Figure 10-3\. Black makes a similar move next, placing a black
    tile on 4, 6 which flips the white tile at 4, 5\. This results in a board that
    looks like Figure 10-4.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 5, 5处的黑色方块位于新的白色方块和已有的白色方块5, 4之间。该黑色方块被翻转并成为新的白色方块，使得棋盘看起来像图10-3。黑方接下来也进行类似的移动，在4,
    6处放置一个黑色方块，翻转了5, 4处的白色方块。这导致了一个看起来像图10-4的棋盘。
- en: '| ![Description: C:\book1svn\4thed\images\15-3.webp](../Images/39b449da840ba67850f1c3f80c2ef3bc.png)
    | ![Description: C:\book1svn\4thed\images\15-4.webp](../Images/26d7ecea386ab483175a700a099bb655.png)
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| ![Description: C:\book1svn\4thed\images\15-3.webp](../Images/39b449da840ba67850f1c3f80c2ef3bc.png)
    | ![Description: C:\book1svn\4thed\images\15-4.webp](../Images/26d7ecea386ab483175a700a099bb655.png)
    |'
- en: '| White''s move will flip over one of black''s tiles. | Black places a new
    tile, which flips over one of white''s tiles. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 白方的移动将翻转黑方的一个方块。| 黑方放置一个新方块，翻转白方的一个方块。|'
- en: Tiles in all directions are flipped as long as they are in between the player's
    new tile and existing tile. In Figure 10-5, the white player places a tile at
    3, 6 and flips black tiles in both directions (marked by the lines). The result
    is in Figure 10-6.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 只要它们处于玩家新方块和已有方块之间，所有方向上的方块都会被翻转。在图10-5中，白方在3, 6处放置一个方块，并在两个方向上翻转了黑色方块（由线标记）。结果如图10-6所示。
- en: '| ![Description: C:\book1svn\4thed\images\15-5.webp](../Images/f03233bba5d3e24dc5a8956e705f0a96.png)
    | ![Description: C:\book1svn\4thed\images\15-6.webp](../Images/3a208e09e2b28dc711eb207382db7d24.png)
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| ![Description: C:\book1svn\4thed\images\15-5.webp](../Images/f03233bba5d3e24dc5a8956e705f0a96.png)
    | ![Description: C:\book1svn\4thed\images\15-6.webp](../Images/3a208e09e2b28dc711eb207382db7d24.png)
    |'
- en: '| White''s second move at 3, 6 will flip two of black''s tiles. | The board
    after white''s second move. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 白方在3, 6处的第二步将翻转两个黑方的方块。| 白方的第二步后的棋盘。|'
- en: As you can see, each player can quickly grab a majority of the tiles on the
    board in just one or two moves. Players must always make a move that captures
    at least one tile. The game ends when a player either cannot make a move, or the
    board is completely full. The player with the most tiles of their color wins.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，每个玩家可以在一两步内迅速占据棋盘上大部分方块。玩家必须始终进行至少占据一个方块的移动。游戏在玩家无法进行移动或者棋盘完全填满时结束。拥有最多自己颜色方块的玩家获胜。
- en: 'You can learn more about Reversi from Wikipedia: [http://en.wikipedia.org/wiki/Reversi](https://en.wikipedia.org/wiki/Reversi)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从维基百科了解更多关于Reversi的信息：[http://en.wikipedia.org/wiki/Reversi](https://en.wikipedia.org/wiki/Reversi)
- en: A text version of this game that uses `print()` and `input()` instead of Pygame
    is featured in Chapter 15 of “Invent Your Own Computer Games with Python”. You
    can read that chapter for details about how the computer AI’s algorithm was put
    together. [http://inventwithpython.com/chapter15.html](//inventwithpython.com/chapter15.html)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏的文本版本使用`print()`和`input()`而不是Pygame，出现在“用Python发明自己的计算机游戏”第15章。您可以阅读该章节了解计算机AI算法是如何组合的。[http://inventwithpython.com/chapter15.html](//inventwithpython.com/chapter15.html)
- en: The computer AI for this game is pretty good, because it is easy for a computer
    to simulate every possible move and take the one that flips over the most tiles.
    It usually beats me whenever I play it.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏的电脑AI非常出色，因为计算机很容易模拟每一种可能的走法，并选择翻转最多瓷砖的走法。每当我玩的时候，它通常都会打败我。
- en: Source Code for Flippy
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flippy的源代码
- en: This source code can be downloaded from [http://invpy.com/flippy.py](//invpy.com/flippy.py).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此源代码可从[http://invpy.com/flippy.py](//invpy.com/flippy.py)下载。
- en: The image files that Flippy uses can be downloaded from [http://invpy.com/flippyimages.zip](//invpy.com/flippyimages.zip).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Flippy使用的图像文件可以从[http://invpy.com/flippyimages.zip](//invpy.com/flippyimages.zip)下载。
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Ink Spill, a “Flood It” Clone
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ink Spill，一个“Flood It”克隆
- en: '![](../Images/771e89e41e739b61a6dcda9d2e804e88.png)      ![](../Images/ca2fe03d9bf6d0670f26bc6e4951d833.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/771e89e41e739b61a6dcda9d2e804e88.png)      ![](../Images/ca2fe03d9bf6d0670f26bc6e4951d833.png)'
- en: The game “Flood It” begins with a board filled with colored tiles. On each turn
    the player chooses a new color to paint the top left tile and any tiles adjacent
    to it of that same color. This game makes use of the flood fill algorithm (described
    in the Star Pusher chapter). The goal of the game is to turn the entire board
    into a single color before running out of turns.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏“Flood It”从一个填满彩色瓷砖的棋盘开始。在每一轮中，玩家选择一个新颜色来涂抹左上角的瓷砖，以及相邻的相同颜色的瓷砖。这个游戏使用了泛洪填充算法（在Star
    Pusher章节中有描述）。游戏的目标是在用完所有回合之前将整个棋盘变成单一颜色。
- en: This game also has a Settings screen where the player can change the size of
    the board and the difficulty of the game. If the player gets board of the colors,
    there are a few other color schemes they can switch to as well.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏还有一个设置屏幕，玩家可以更改棋盘的大小和游戏的难度。如果玩家对颜色感到厌倦，他们还可以切换到其他几种颜色方案。
- en: Source Code for Ink Spill
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ink Spill的源代码
- en: This source code can be downloaded from [http://invpy.com/inkspill.py](//invpy.com/inkspill.py).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此源代码可从[http://invpy.com/inkspill.py](//invpy.com/inkspill.py)下载。
- en: The image files that Flippy uses can be downloaded from [http://invpy.com/inkspillimages.zip](//invpy.com/inkspillimages.zip).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Flippy使用的图像文件可以从[http://invpy.com/inkspillimages.zip](//invpy.com/inkspillimages.zip)下载。
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Four-In-A-Row, a “Connect Four” Clone
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 四子连珠，一个“四子连珠”克隆
- en: '![](../Images/c53eadb5d61aff790148c10e75f206a1.png)      ![](../Images/22c7f19673db3c43b86217476212b3f7.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c53eadb5d61aff790148c10e75f206a1.png)      ![](../Images/22c7f19673db3c43b86217476212b3f7.png)'
- en: The game “Connect Four” has a 7 x 6 board where the players take turns dropping
    tokens from the top of the board. The tokens will fall from the top of each column
    and come to rest on the bottom of the board or on top of the topmost token in
    that column. A player wins when four of their tokens line up in a row either horizontally,
    vertically, or diagonally.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏“四子连珠”有一个7x6的棋盘，玩家轮流从棋盘顶部放置标记。标记将从每列的顶部掉落，并停在底部或该列的最顶部标记上。当四个标记水平、垂直或对角线排成一行时，玩家获胜。
- en: The AI for this game is pretty good. It simulates every possible move it can
    make, then simulates every possible move the human player can make in response
    to each of those moves, and then simulates every possible move it can make *in
    response to that*, and then simulates every possible move the human player could
    make *in response to each of those moves!* After all that thinking, the computer
    determines which move is most likely to lead to it winning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏的AI非常出色。它模拟了它可以做的每一种可能的走法，然后模拟了人类玩家对每一种走法的可能响应，然后模拟了它可以对此做出的每一种可能的走法，然后模拟了人类玩家对每一种走法的可能响应！经过所有这些思考，计算机确定了哪一步最有可能导致它获胜。
- en: So the computer is kind of tough to beat. I usually lose to it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以电脑有点难以战胜。我通常输给它。
- en: Since there are seven possible moves you can make on your turn (unless some
    columns are full), and seven possible moves the opponent could make, and seven
    moves in response to that, and seven moves in response to that, that means that
    on each turn the computer is considering 7 x 7 x 7 x 7 = 2,401 possible moves.
    You can make the computer consider the game even further by setting the `DIFFICULTY`
    constant to a higher number, but when I set to a value larger than `2`, the computer
    takes a long time to calculate its turn.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您可以在自己的回合上进行七种可能的走法（除非某些列已满），对手可以进行七种可能的走法，对此有七种可能的走法，对此有七种可能的走法，这意味着在每一回合，计算机都在考虑7
    x 7 x 7 x 7 = 2,401种可能的走法。您可以通过将`DIFFICULTY`常量设置为更高的数字来让计算机进一步考虑游戏，但是当我将其设置为大于`2`的值时，计算机需要很长时间来计算自己的回合。
- en: You can also make the computer easier by setting `DIFFICULTY` to `1`. Then the
    computer only considers each of its moves and the player’s possible responses
    to those moves. If you set the `DIFFICULTY` to `0`, then the computer loses all
    intelligence and simply makes random moves.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过将`DIFFICULTY`设置为`1`来降低电脑的难度。然后，计算机只考虑自己的每一步和玩家对这些步骤的可能响应。如果将`DIFFICULTY`设置为`0`，那么计算机将失去所有智能，只会进行随机移动。
- en: Source Code for Four-In-A-Row
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 四子连珠的源代码
- en: This source code can be downloaded from [http://invpy.com/fourinarow.py](//invpy.com/fourinarow.py).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此源代码可从[http://invpy.com/fourinarow.py](//invpy.com/fourinarow.py)下载。
- en: The image files that Flippy uses can be downloaded from [http://invpy.com/fourinarowimages.zip](//invpy.com/fourinarowimages.zip).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Flippy使用的图像文件可以从[http://invpy.com/fourinarowimages.zip](//invpy.com/fourinarowimages.zip)下载。
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Gemgem, a “Bejeweled” Clone
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gemgem，一个“宝石迷阵”克隆
- en: '![](../Images/2fff7e8b43ab11dbea4438bb0c41e068.png)    ![](../Images/a503a33f8f5b5e285722385e2845d49c.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2fff7e8b43ab11dbea4438bb0c41e068.png)    ![](../Images/a503a33f8f5b5e285722385e2845d49c.png)'
- en: “Bejeweled” is a game where gems fall to fill up a board. The player can swap
    any two adjacent gems to try to match three gems in a row (vertically or horizontally,
    but not diagonally). The matched gems then disappear, making way for new gems
    to fall from the top. Matching more than three gems, or causing a chain reaction
    of gem matches will result in more points. The player’s score slowly drops over
    time, so the player must constantly be making new matches. The game ends when
    no possible match can be made on the board.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: “宝石迷阵”是一个宝石掉落填满棋盘的游戏。玩家可以交换任意两个相邻的宝石，尝试在一行中匹配三个宝石（垂直或水平，但不是对角线）。匹配的宝石然后消失，为从顶部掉落新宝石让路。匹配超过三个宝石，或引发宝石匹配的连锁反应将获得更多分数。玩家的分数会随时间缓慢下降，因此玩家必须不断进行新的匹配。当棋盘上无法进行匹配时，游戏结束。
- en: Source Code for Gemgem
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gemgem的源代码
- en: This source code can be downloaded from [http://invpy.com/gemgem.py](//invpy.com/gemgem.py).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个源代码可以从[http://invpy.com/gemgem.py](//invpy.com/gemgem.py)下载。
- en: The image files that Flippy uses can be downloaded from [http://invpy.com/gemgemimages.zip](//invpy.com/gemgemimages.zip).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Flippy使用的图像文件可以从[http://invpy.com/gemgemimages.zip](//invpy.com/gemgemimages.zip)下载。
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Summary
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: I hope these game programs have given you your own ideas about what games you’d
    like to make and how you can write the code for them. Even if you don’t have any
    ideas of your own, it’s great practice to try to program clones of other games
    you’ve played.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这些游戏程序给了你自己关于你想制作什么游戏以及如何编写它们的想法。即使你没有自己的想法，尝试编写你玩过的其他游戏的克隆版本也是很好的练习。
- en: 'Here are several websites that can teach you more about programming Python:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些可以教你更多关于Python编程的网站：
- en: · [http://pygame.org](http://pygame.org) – The official Pygame website has the
    source code to hundreds of games that people have written that make use of the
    Pygame library. You can learn a lot by downloading and reading other people’s
    source code.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://pygame.org](http://pygame.org) - 官方Pygame网站上有数百个游戏的源代码，这些游戏利用了Pygame库。通过下载和阅读其他人的源代码，你可以学到很多东西。
- en: · [http://python.org/doc/](https://python.org/doc/) - More Python tutorials
    and the documentation of all the Python modules and functions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://python.org/doc/](https://python.org/doc/) - 更多Python教程和所有Python模块和函数的文档。
- en: · [http://pygame.org/docs/](http://pygame.org/docs/) - Complete documentation
    on the modules and functions for Pygame
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://pygame.org/docs/](http://pygame.org/docs/) - Pygame模块和函数的完整文档
- en: · [http://reddit.com/r/learnpython](http://reddit.com/r/learnpython) and [http://reddit.com/r/learnprogramming](http://reddit.com/r/learnprogramming)
    have several users that could help you with finding resources to learn programming.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://reddit.com/r/learnpython](http://reddit.com/r/learnpython) 和 [http://reddit.com/r/learnprogramming](http://reddit.com/r/learnprogramming)
    有很多用户可以帮助你找到学习编程的资源。
- en: · [http://inventwithpython.com/pygame](//inventwithpython.com/pygame) - This
    book's website, which includes all the source code for these programs and additional
    information. This site also has the image and sound files used in the Pygame programs.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://inventwithpython.com/pygame](//inventwithpython.com/pygame) - 本书的网站，包括这些程序的所有源代码和额外信息。该网站还包含Pygame程序中使用的图像和声音文件。
- en: · [http://inventwithpython.com](//inventwithpython.com) - The website for the
    book “Invent Your Own Computer Games with Python”, which covers basic Python programming.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://inventwithpython.com](//inventwithpython.com) - 《用Python发明你自己的计算机游戏》一书的网站，涵盖基本的Python编程。
- en: · [http://invpy.com/wiki](//invpy.com/wiki) - A wiki that covers individual
    Python programming concepts that you can look up if you need to learn about something
    specific.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/wiki](//invpy.com/wiki) - 一个涵盖个别Python编程概念的维基，如果你需要了解特定内容，可以查阅。
- en: · [http://invpy.com/traces](//invpy.com/traces) - A web application that helps
    you trace through the execution of the programs in this book, step by step.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/traces](//invpy.com/traces) - 一个帮助你逐步跟踪本书中程序执行的网络应用。
- en: · [http://invpy.com/videos](//invpy.com/videos) - Videos that accompany the
    programs in this book.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://invpy.com/videos](//invpy.com/videos) - 与本书中程序配套的视频。
- en: · [http://gamedevlessons.com](http://gamedevlessons.com) - A helpful website
    about how to design and program video games.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: · [http://gamedevlessons.com](http://gamedevlessons.com) - 一个关于如何设计和编程视频游戏的有用网站。
- en: · [[email protected]](/cdn-cgi/l/email-protection) - My email address. Feel
    free to email me your questions about this book or about Python programming.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: · [[email protected]](/cdn-cgi/l/email-protection) - 我的电子邮件地址。随时给我发电子邮件，询问关于本书或Python编程的问题。
- en: Or you can find out more about Python by searching the World Wide Web. Go to
    the search website [http://google.com](https://google.com) and search for “Python
    programming” or “Python tutorials” to find web sites that can teach you more about
    Python programming.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以通过搜索全球网络了解更多关于Python的信息。前往搜索网站[http://google.com](https://google.com)，搜索“Python编程”或“Python教程”以找到更多关于Python编程的网站。
- en: Now get going and invent your own games. And good luck!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在开始发明你自己的游戏。祝你好运！

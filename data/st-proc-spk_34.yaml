- en: Part IV. Advanced Spark Streaming Techniques
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分。高级 Spark Streaming 技术
- en: In this part, we examine some of the more advanced applications that you can
    create using Spark Streaming, namely approximation algorithms and machine learning
    algorithms.^([1](part04.xhtml#idm46385810425864))
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分中，我们将检查一些更高级的应用，您可以使用 Spark Streaming 创建这些应用，即近似算法和机器学习算法。^([1](part04.xhtml#idm46385810425864))
- en: 'Approximation algorithms offer a window into pushing the scalability of Spark
    to the edge and offer a technique for graceful degradation when the throughput
    of data is more than what the deployment can endure. In this part, we cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 近似算法为推动 Spark 的可扩展性提供了一扇窗口，并且在数据吞吐量超过部署能力时，提供了一种优雅降级的技术。在本部分中，我们涵盖：
- en: Hashing functions and their use for the building block of sketching
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希函数及其在草图构建块中的使用
- en: The HyperLogLog algorithm, for counting distinct elements
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HyperLogLog 算法，用于计算不同元素的数量
- en: The Count-Min-Sketch algorithm, for answering queries about top elements of
    a structure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Count-Min-Sketch 算法，用于回答关于结构顶部元素的查询
- en: We also cover the T-Digest, a useful estimator that allows us to store a succinct
    representation of a distribution of values using clustering techniques.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了 T-Digest，这是一个有用的估计器，允许我们使用聚类技术对值分布进行简洁表示。
- en: 'Machine learning models offer novel techniques for producing relevant and accurate
    results on an ever-changing stream of data. In the following chapters, we see
    how to adapt well-known batch algorithms, such as naive Bayesian classification,
    decision trees, and K-Means clustering for streaming. This will lead us to cover,
    respectively:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型提供了一些新技术，能够在不断变化的数据流上产生相关且准确的结果。在接下来的章节中，我们将看到如何调整已知的批处理算法，例如朴素贝叶斯分类、决策树和
    K-Means 聚类，使其适应流式处理。这将使我们依次涵盖：
- en: Online Naive Bayes
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线朴素贝叶斯
- en: Hoeffding Trees
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hoeffding 树
- en: Online *K*-Means clustering
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线*K*-均值聚类
- en: These algorithms will form a streaming complement of their treatment for Spark
    in batch form in [[Laserson2017]](app04.xhtml#Laserson2017). This should equip
    you with powerful techniques for classifying or clustering elements of a data
    stream.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些算法将形成他们在批处理形式下处理 Spark 中的流的补充，在[[Laserson2017]](app04.xhtml#Laserson2017)中。这将为您提供强大的技术，用于对数据流的元素进行分类或聚类。
- en: ^([1](part04.xhtml#idm46385810425864-marker)) Although we focus our presentation
    on Spark Streaming, some of the algorithms we describe, such as the HyperLogLog,
    are present in built-in functions of Spark as part of the DataFrames API, such
    as `approxCountDistinct`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](part04.xhtml#idm46385810425864-marker)) 虽然我们重点介绍 Spark Streaming，但我们描述的一些算法（如
    HyperLogLog）已经作为 Spark 的一部分内置函数存在，例如 `approxCountDistinct`，它们作为 DataFrames API
    的一部分。

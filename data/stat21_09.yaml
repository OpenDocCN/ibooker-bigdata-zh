- en: Chapter 8 Resampling and simulation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 重采样和模拟
- en: 原文：[https://statsthinking21.github.io/statsthinking21-core-site/resampling-and-simulation.html](https://statsthinking21.github.io/statsthinking21-core-site/resampling-and-simulation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://statsthinking21.github.io/statsthinking21-core-site/resampling-and-simulation.html](https://statsthinking21.github.io/statsthinking21-core-site/resampling-and-simulation.html)
- en: 'The use of computer simulations has become an essential aspect of modern statistics.
    For example, one of the most important books in practical computer science, called
    *Numerical Recipes*, says the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机模拟的使用已经成为现代统计学的一个重要方面。例如，实际计算机科学中最重要的书之一，名为《数值方法》，说：
- en: “Offered the choice between mastery of a five-foot shelf of analytical statistics
    books and middling ability at performing statistical Monte Carlo simulations,
    we would surely choose to have the latter skill.”
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “如果让我们选择掌握五英尺高的分析统计书籍和在执行统计蒙特卡洛模拟方面具有一般能力之间，我们肯定会选择后者的技能。”
- en: In this chapter we will introduce the concept of a Monte Carlo simulation and
    discuss how it can be used to perform statistical analyses.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍蒙特卡洛模拟的概念，并讨论如何使用它进行统计分析。
- en: 8.1 Monte Carlo simulation
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.1 蒙特卡洛模拟
- en: The concept of Monte Carlo simulation was devised by the mathematicians Stan
    Ulam and Nicholas Metropolis, who were working to develop an atomic weapon for
    the US as part of the Manhattan Project. They needed to compute the average distance
    that a neutron would travel in a substance before it collided with an atomic nucleus,
    but they could not compute this using standard mathematics. Ulam realized that
    these computations could be simulated using random numbers, just like a casino
    game. In a casino game such as a roulette wheel, numbers are generated at random;
    to estimate the probability of a specific outcome, one could play the game hundreds
    of times. Ulam’s uncle had gambled at the Monte Carlo casino in Monaco, which
    is apparently where the name came from for this new technique.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙特卡洛模拟的概念是由数学家斯坦·乌拉姆和尼古拉斯·梅特罗波利斯提出的，他们正在为美国曼哈顿计划的原子武器开发工作。他们需要计算中子在物质中与原子核碰撞之前的平均距离，但他们无法使用标准数学计算。乌拉姆意识到这些计算可以使用随机数来模拟，就像赌场游戏一样。在赌场游戏中，例如轮盘赌，数字是随机生成的；为了估计特定结果的概率，可以玩数百次游戏。乌拉姆的叔叔曾在摩纳哥的蒙特卡洛赌场赌博，这显然是这种新技术的名称来源。
- en: 'There are four steps to performing a Monte Carlo simulation:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 执行蒙特卡洛模拟有四个步骤：
- en: Define a domain of possible values
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义可能值的域
- en: Generate random numbers within that domain from a probability distribution
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从概率分布中生成该域内的随机数
- en: Perform a computation using the random numbers
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用随机数进行计算
- en: Combine the results across many repetitions
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在许多重复中结合结果
- en: As an example, let’s say that I want to figure out how much time to allow for
    an in-class quiz. We will pretend for the moment that we know that the distribution
    of quiz completion times is normal, with mean of 5 minutes and standard deviation
    of 1 minute. Given this, how long does the test period need to be so that we expect
    all students to finish the exam 99% of the time? There are two ways to solve this
    problem. The first is to calculate the answer using a mathematical theory known
    as the statistics of extreme values. However, this involves complicated mathematics.
    Alternatively, we could use Monte Carlo simulation. To do this, we need to generate
    random samples from a normal distribution.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我想弄清楚为课堂测验留多少时间。我们暂时假设我们知道测验完成时间的分布是正态分布，均值为5分钟，标准差为1分钟。在这种情况下，测试时间需要多长，以便我们预计所有学生99%的时间都能完成考试？解决这个问题有两种方法。第一种是使用称为极值统计的数学理论计算答案。然而，这涉及复杂的数学。或者，我们可以使用蒙特卡洛模拟。为此，我们需要从正态分布中生成随机样本。
- en: 8.2 Randomness in statistics
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.2 统计学中的随机性
- en: 'The term “random” is often used colloquially to refer to things that are bizarre
    or unexpected, but in statistics the term has a very specific meaning: A process
    is *random* if it is unpredictable. For example, if I flip a fair coin 10 times,
    the value of the outcome on one flip does not provide me with any information
    that lets me predict the outcome on the next flip. It’s important to note that
    the fact that something is unpredictable doesn’t necessarily mean that it is not
    deterministic. For example, when we flip a coin, the outcome of the flip is determined
    by the laws of physics; if we knew all of the conditions in enough detail, we
    should be able to predict the outcome of the flip. However, many factors combine
    to make the outcome of the coin flip unpredictable in practice.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: “随机”一词在口语中经常用来指称奇怪或意外的事物，但在统计学中，这个词有一个非常具体的含义：如果一个过程是*随机*的，那么它是不可预测的。例如，如果我抛一枚公平的硬币10次，一次抛硬币的结果的值并不能提供任何信息，让我能够预测下一次抛硬币的结果。重要的是要注意，某事是不可预测的并不一定意味着它不是确定性的。例如，当我们抛硬币时，抛硬币的结果是由物理定律决定的；如果我们以足够详细的方式知道所有条件，我们应该能够预测抛硬币的结果。然而，许多因素结合在一起，使得硬币抛掷的结果在实践中是不可预测的。
- en: Psychologists have shown that humans actually have a fairly bad sense of randomness.
    First, we tend to see patterns when they don’t exist. In the extreme, this leads
    to the phenomenon of *pareidolia*, in which people will perceive familiar objects
    within random patterns (such as perceiving a cloud as a human face or seeing the
    Virgin Mary in a piece of toast). Second, humans tend to think of random processes
    as self-correcting, which leads us to expect that we are “due for a win” after
    losing many rounds in a game of chance, a phenomenon known as the “gambler’s fallacy”.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 心理学家已经证明，人类实际上对随机性有相当糟糕的感觉。首先，我们倾向于在不存在的情况下看到模式。在极端情况下，这导致了*错觉*现象，即人们会在随机模式中看到熟悉的物体（例如将云看作人脸或在一片面包上看到圣母玛利亚）。其次，人类倾向于认为随机过程是自我纠正的，这使我们期望在游戏中输了很多轮之后“应该赢了”，这种现象被称为“赌徒谬误”。
- en: 8.3 Generating random numbers
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.3 生成随机数
- en: Running a Monte Carlo simulation requires that we generate random numbers. Generating
    truly random numbers (i.e. numbers that are completely unpredictable) is only
    possible through physical processes, such as the decay of atoms or the rolling
    of dice, which are difficult to obtain and/or too slow to be useful for computer
    simulation (though they can be obtained from the [NIST Randomness Beacon](https://www.nist.gov/programs-projects/nist-randomness-beacon%5D)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 运行蒙特卡洛模拟需要生成随机数。生成真正的随机数（即完全不可预测的数）只能通过物理过程来实现，例如原子衰变或掷骰子，这些过程很难获得和/或太慢，以至于对于计算机模拟来说不实用（尽管可以从[NIST随机性信标](https://www.nist.gov/programs-projects/nist-randomness-beacon%5D)获得）。
- en: In general, instead of truly random numbers we use *pseudo-random* numbers generated
    using a computer algorithm; these numbers will seem random in the sense that they
    are difficult to predict, but the series of numbers will actually repeat at some
    point. For example, the random number generator used in R will repeat after \(2^{19937}
    - 1\) numbers. That’s far more than the number of seconds in the history of the
    universe, and we generally think that this is fine for most purposes in statistical
    analysis.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我们使用计算机算法生成的*伪随机*数，而不是真正的随机数；这些数字在某种意义上看起来是随机的，因为它们很难预测，但实际上数字序列会在某个时候重复。例如，在R中使用的随机数生成器在\(2^{19937}
    - 1\)个数字后会重复。这远远超过了宇宙历史上的秒数，我们普遍认为这对于统计分析的大多数目的来说是可以接受的。
- en: Most statistical software includes functions to generate random numbers for
    each of the major probability distributions, such as the uniform distribution
    (all values between 0 and 1 equally), normal distribution, and binomial distribution
    (e.g. rolling the dice, coin flips). Figure [8.1](resampling-and-simulation.html#fig:rngExamples)
    shows examples of numbers generated from uniform and a normal distribution functions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数统计软件包括用于生成每个主要概率分布的随机数的函数，例如均匀分布（0到1之间的所有值均等）、正态分布和二项分布（例如掷骰子、抛硬币）。图[8.1](resampling-and-simulation.html#fig:rngExamples)显示了从均匀分布和正态分布函数生成的数字的示例。
- en: '![Examples of random numbers generated from a uniform (left) or normal (right)
    distribution.](../Images/87514051f583244f64868a74829ab3c6.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![从均匀（左）或正态（右）分布生成的随机数示例。](../Images/87514051f583244f64868a74829ab3c6.png)'
- en: 'Figure 8.1: Examples of random numbers generated from a uniform (left) or normal
    (right) distribution.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1：从均匀（左）或正态（右）分布生成的随机数示例。
- en: One can also generate random numbers for any distribution using a *quantile*
    function for the distribution. This is the inverse of the cumulative distribution
    function; instead of identifying the cumulative probabilities for a set of values,
    the quantile function identifies the values for a set of cumulative probabilities.
    Using the quantile function, we can generate random numbers from a uniform distribution,
    and then map those into the distribution of interest via its quantile function.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用分布的*分位数*函数生成任何分布的随机数。这是累积分布函数的反函数；分位数函数不是为一组值确定累积概率，而是为一组累积概率确定值。使用分位数函数，我们可以从均匀分布中生成随机数，然后通过其分位数函数将其映射到感兴趣的分布中。
- en: By default, the random number generators in statistical software will generate
    a different set of random numbers every time they are run. However, it is also
    possible to generate exactly the same set of random numbers, by setting what is
    called the *random seed* to a specific value. If you were to look at the code
    that generated these figures, We will do this in many of the examples in this
    book, in order to make sure that the examples are reproducible.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在统计软件中，默认情况下，随机数生成器每次运行时都会生成不同的随机数集。然而，也可以通过将所谓的*随机种子*设置为特定值来生成完全相同的随机数集。如果你看一下生成这些图表的代码，我们将在本书的许多示例中这样做，以确保这些示例是可重现的。
- en: 8.4 Using Monte Carlo simulation
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.4 使用蒙特卡洛模拟
- en: Let’s go back to our example of exam finishing times. Say that I administer
    three quizzes and record the finishing times for each student for each exam, which
    might look like the distributions presented in Figure [8.2](resampling-and-simulation.html#fig:finishingTimes).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的考试完成时间的例子。假设我进行了三次测验，并记录了每个学生对每次考试的完成时间，这可能看起来像图[8.2](resampling-and-simulation.html#fig:finishingTimes)中呈现的分布。
- en: '![Simulated finishing time distributions.](../Images/f37567ee3a4c50b203f7dd1cee2c3bc7.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![模拟完成时间分布。](../Images/f37567ee3a4c50b203f7dd1cee2c3bc7.png)'
- en: 'Figure 8.2: Simulated finishing time distributions.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2：模拟完成时间分布。
- en: What we really want to know to answer our question is not what the distribution
    of finishing times looks like, but rather what the distribution of the *longest*
    finishing time for each quiz looks like. To do this, we can simulate the finishing
    time for a quiz, using the assumption that the finishing times are distributed
    normally, as stated above; for each of these simulated quizzes, we then record
    the longest finishing time. We repeat this simulation a large number of times
    (5000 should be enough) and record the distribution of finishing times, which
    is shown in Figure [8.3](resampling-and-simulation.html#fig:finishTimeSim).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答我们的问题，我们真正想知道的不是完成时间的分布是什么样子，而是每次测验的*最长*完成时间的分布是什么样子。为了做到这一点，我们可以模拟测验的完成时间，使用上面提到的完成时间分布正态分布的假设；对于这些模拟的测验中，我们记录最长的完成时间。我们重复这个模拟很多次（5000次应该足够），并记录完成时间的分布，如图[8.3](resampling-and-simulation.html#fig:finishTimeSim)所示。
- en: '![Distribution of maximum finishing times across simulations.](../Images/e9d33074cc60d2cf416f2f16350849f5.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![模拟中最长完成时间的分布。](../Images/e9d33074cc60d2cf416f2f16350849f5.png)'
- en: 'Figure 8.3: Distribution of maximum finishing times across simulations.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3：模拟中最长完成时间的分布。
- en: This shows that the 99th percentile of the finishing time distribution falls
    at 8.74, meaning that if we were to give that much time for the quiz, then everyone
    should finish 99% of the time. It’s always important to remember that our assumptions
    matter – if they are wrong, then the results of the simulation are useless. In
    this case, we assumed that the finishing time distribution was normally distributed
    with a particular mean and standard deviation; if these assumptions are incorrect
    (and they almost certainly are, since it’s rare for elapsed times to be normally
    distributed), then the true answer could be very different.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明完成时间分布的第99百分位数为8.74，这意味着如果我们给予这么多时间来做测验，那么99%的时间每个人都应该能完成。重要的是要记住我们的假设很重要
    - 如果它们是错误的，那么模拟的结果就毫无意义。在这种情况下，我们假设完成时间分布是正态分布的，具有特定的平均值和标准差；如果这些假设是不正确的（几乎肯定是不正确的，因为经过的时间很少是正态分布的），那么真实的答案可能会大不相同。
- en: '8.5 Using simulation for statistics: The bootstrap'
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.5 使用模拟进行统计：bootstrap
- en: So far we have used simulation to demonstrate statistical principles, but we
    can also use simulation to answer real statistical questions. In this section
    we will introduce a concept known as the *bootstrap* that lets us use simulation
    to quantify our uncertainty about statistical estimates. Later in the course,
    we will see other examples of how simulation can often be used to answer statistical
    questions, especially when theoretical statistical methods are not available or
    when their assumptions are too difficult to meet.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经使用模拟来演示统计原理，但我们也可以使用模拟来回答真实的统计问题。在本节中，我们将介绍一个称为*bootstrap*的概念，它让我们可以使用模拟来量化我们对统计估计的不确定性。在课程的后面，我们将看到其他例子，说明模拟通常可以用来回答统计问题，特别是当理论统计方法不可用或者它们的假设太难满足时。
- en: 8.5.1 Computing the bootstrap
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.5.1 计算bootstrap
- en: In the previous chapter, we used our knowledge of the sampling distribution
    of the mean to compute the standard error of the mean. But what if we can’t assume
    that the estimates are normally distributed, or we don’t know their distribution?
    The idea of the bootstrap is to use the data themselves to estimate an answer.
    The name comes from the idea of pulling one’s self up by one’s own bootstraps,
    expressing the idea that we don’t have any external source of leverage so we have
    to rely upon the data themselves. The bootstrap method was conceived by Bradley
    Efron of the Stanford Department of Statistics, who is one of the world’s most
    influential statisticians.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们利用对平均值的抽样分布的了解来计算平均值的标准误差。但是，如果我们不能假设估计值是正态分布的，或者我们不知道它们的分布是什么怎么办？bootstrap的想法是使用数据本身来估计答案。这个名字来源于一个拉自己的靴带的想法，表达了我们没有任何外部杠杆的想法，所以我们必须依靠数据本身。bootstrap方法是由斯坦福大学统计系的Bradley
    Efron构想的，他是世界上最有影响力的统计学家之一。
- en: The idea behind the bootstrap is that we repeatedly sample from the actual dataset;
    importantly, we sample *with replacement*, such that the same data point will
    often end up being represented multiple times within one of the samples. We then
    compute our statistic of interest on each of the bootstrap samples, and use the
    distribution of those estimates as our sampling distribution. In a sense, we treat
    our particular sample as the entire population, and then repeatedly sample with
    replacement to generate our samples for analysis. This makes the assumption that
    our particular sample is an accurate reflection of the population, which is probably
    reasonable for larger samples but can break down when samples are smaller.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: bootstrap背后的想法是我们反复从实际数据集中抽样；重要的是，我们进行*有放回*的抽样，这样同一个数据点往往会在一个样本中被多次表示。然后我们计算我们感兴趣的统计量在每个bootstrap样本上，然后使用这些估计值的分布作为我们的抽样分布。在某种意义上，我们将我们特定的样本视为整个人口，然后反复进行有放回的抽样来生成我们用于分析的样本。这假设我们特定的样本是人口的准确反映，对于较大的样本来说可能是合理的，但在样本较小时可能会失效。
- en: Let’s start by using the bootstrap to estimate the sampling distribution of
    the mean of adult height in the NHANES dataset, so that we can compare the result
    to the standard error of the mean (SEM) that we discussed earlier.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先使用bootstrap来估计NHANES数据集中成年人身高的平均值的抽样分布，以便我们可以将结果与我们之前讨论的平均标准误差（SEM）进行比较。
- en: '![An example of bootstrapping to compute the standard error of the mean adult
    height in the NHANES dataset. The histogram shows the distribution of means across
    bootstrap samples, while the red line shows the normal distribution based on the
    sample mean and standard deviation.](../Images/d7f3c71a18c838a3ef1314bf8b24d0f8.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![使用bootstrap来计算NHANES数据集中成年人身高的平均标准误差的示例。直方图显示了bootstrap样本中平均值的分布，而红线显示了基于样本平均值和标准差的正态分布。](../Images/d7f3c71a18c838a3ef1314bf8b24d0f8.png)'
- en: 'Figure 8.4: An example of bootstrapping to compute the standard error of the
    mean adult height in the NHANES dataset. The histogram shows the distribution
    of means across bootstrap samples, while the red line shows the normal distribution
    based on the sample mean and standard deviation.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4：使用bootstrap来计算NHANES数据集中成年人身高的平均标准误差的示例。直方图显示了bootstrap样本中平均值的分布，而红线显示了基于样本平均值和标准差的正态分布。
- en: Figure [8.4](resampling-and-simulation.html#fig:bootstrapSEM) shows that the
    distribution of means across bootstrap samples is fairly close to the theoretical
    estimate based on the assumption of normality. We would not usually employ the
    bootstrap to compute confidence intervals for the mean (since we can generally
    assume that the normal distribution is appropriate for the sampling distribution
    of the mean, as long as our sample is large enough), but this example shows how
    the method gives us roughly the same result as the standard method based on the
    normal distribution. The bootstrap would more often be used to generate standard
    errors for estimates of other statistics where we know or suspect that the normal
    distribution is not appropriate. In addition, in a later chapter you will see
    how we can also use the bootstrap samples to generate estimates of the uncertainty
    in our sample statistic as well.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图[8.4](resampling-and-simulation.html#fig:bootstrapSEM)显示，通过自助法样本的均值分布与基于正态分布假设的理论估计相当接近。通常情况下，我们不会使用自助法来计算均值的置信区间（因为我们通常可以假设正态分布适用于均值的抽样分布，只要我们的样本足够大），但这个例子展示了这种方法给我们带来了与基于正态分布的标准方法大致相同的结果。自助法更常用于生成我们知道或怀疑正态分布不适用的其他统计量的标准误差。此外，在后面的章节中，您将看到我们还可以使用自助法样本来生成我们样本统计量的不确定性估计。
- en: 8.6 Learning objectives
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.6 学习目标
- en: 'After reading this chapter, you should be able to:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，您应该能够：
- en: Describe the concept of a Monte Carlo simulation.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述蒙特卡洛模拟的概念。
- en: Describe the meaning of randomness in statistics
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述统计学中随机性的含义
- en: Describe how pseudo-random numbers are generated
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述伪随机数是如何生成的
- en: Describe the concept of the bootstrap
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述自助法的概念
- en: 8.7 Suggested readings
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.7 建议阅读
- en: '*Computer Age Statistical Inference: Algorithms, Evidence and Data Science*,
    by Bradley Efron and Trevor Hastie'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*计算机时代的统计推断：算法、证据和数据科学*，作者：布拉德利·埃夫隆（Bradley Efron）和特雷弗·哈斯蒂（Trevor Hastie）'

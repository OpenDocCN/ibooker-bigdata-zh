- en: 'Pipe: Review Questions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管道：复习问题
- en: Question numbers subject to change
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 问题编号可能会有所变化
- en: Q1
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q1
- en: 'Fill in the blanks to make the following program print 123456789\. If `cat`
    is given no arguments it simply prints its input until EOF. Bonus: Explain why
    the `close` call below is necessary.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 填写空白以使以下程序打印123456789。如果`cat`没有给出参数，它只是打印其输入直到EOF。奖励：解释为什么下面的`close`调用是必要的。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Q2
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q2
- en: 'Use POSIX calls `fork` `pipe` `dup2` and `close` to implement an autograding
    program. Capture the standard output of a child process into a pipe. The child
    process should `exec` the program `./test` with no additional arguments (other
    than the process name). In the parent process read from the pipe: Exit the parent
    process as soon as the captured output contains the ! character. Before exiting
    the parent process send SIGKILL to the child process. Exit 0 if the output contained
    a !. Otherwise if the child process exits causing the pipe write end to be closed,
    then exit with a value of 1\. Be sure to close the unused ends of the pipe in
    the parent and child process'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用POSIX调用`fork` `pipe` `dup2`和`close`来实现一个自动评分程序。将子进程的标准输出捕获到一个管道中。子进程应该使用`exec`命令执行程序`./test`，除了进程名称之外不带任何额外的参数。在父进程中从管道中读取：一旦捕获的输出包含!字符，就退出父进程。在退出父进程之前，向子进程发送SIGKILL。如果输出包含!，则退出0。否则，如果子进程退出导致管道写端关闭，则以值1退出。确保在父进程和子进程中关闭未使用的管道端。
- en: Q3 (Advanced)
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3（高级）
- en: This advanced challenge uses pipes to get an "AI player" to play itself until
    the game is complete. The program `tictactoe` accepts a line of input - the sequence
    of turns made so far, prints the same sequence followed by another turn, and then
    exits. A turn is specified using two characters. For example "A1" and "C3" are
    two opposite corner positions. The string `B2A1A3` is a game of 3 turns/plys.
    A valid response is `B2A1A3C1` (the C1 response blocks the diagonal B2 A3 threat).
    The output line may also include a suffix `-I win` `-You win` `-invalid` or `-draw`
    Use pipes to control the input and output of each child process created. When
    the output contains a `-`, print the final output line (the entire game sequence
    and the result) and exit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个高级挑战使用管道让“AI玩家”自己玩游戏，直到游戏结束。程序`tictactoe`接受一行输入 - 到目前为止所做的转动序列，打印相同的序列，然后再加上一个转动，然后退出。一个转动由两个字符指定。例如，“A1”和“C3”是两个对角位置。字符串`B2A1A3`是一个3个转动/步骤的游戏。一个有效的响应是`B2A1A3C1`（C1响应阻止了对角线B2
    A3的威胁）。输出行还可以包括后缀“-I win”、“-You win”、“-invalid”或“-draw”。使用管道来控制每个创建的子进程的输入和输出。当输出包含“-”时，打印最终输出行（整个游戏序列和结果）并退出。

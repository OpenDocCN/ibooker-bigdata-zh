- en: 'File System, Part 3: Permissions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统，第3部分：权限
- en: Remind Me What do Permissions mean again?
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提醒我权限再次是什么意思？
- en: Every file and directory has a set of 9 permission bits and a type field
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每个文件和目录都有一组9个权限位和一个类型字段
- en: r, permission to read the file
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: r，读取文件的权限
- en: w, permission to write to the file
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: w，写入文件的权限
- en: x, permission to execute the file
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: x，执行文件的权限
- en: chmod 777
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: chmod 777
- en: '| chmod | 7 | 7 | 7 |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| chmod | 7 | 7 | 7 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 01 | 111 | 111 | 111 |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 01 | 111 | 111 | 111 |'
- en: '| d | rwx | rwx | rwx |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| d | rwx | rwx | rwx |'
- en: '| 1 | 2 | 3 | 4 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 2 | 3 | 4 |'
- en: Type of the file
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件类型
- en: Owner Permissions
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有者权限
- en: Group Permissions
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 组权限
- en: Everybody else's permission
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其他人的权限
- en: '`mknod` changes the first field, the type of the file. `chmod` takes a number
    and a file and changes the permission bits.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`mknod`更改第一个字段，文件的类型。`chmod`接受一个数字和一个文件，并更改权限位。'
- en: The file has an owner. If your process has the same user id as the owner (or
    root) then the permissions in the first triad apply to you. If you are in the
    same group as the file (all files are also owned by a group) then the next set
    of permission bits applies to you. If none of the above apply, the last triad
    applies to you.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 文件有一个所有者。如果您的进程具有与所有者相同的用户ID（或root），则第一个三元组中的权限适用于您。如果您与文件在同一组中（所有文件也属于一个组），则下一组权限位适用于您。如果以上都不适用，则最后一个三元组适用于您。
- en: How do I change the permissions on a file?
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何更改文件的权限？
- en: Use `chmod` (short for "change the file mode bits")
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`chmod`（简称“更改文件模式位”）
- en: 'There is a system call, `int chmod(const char *path, mode_t mode);` but we
    will concentrate on the shell command. There''s two common ways to use `chmod`
    ; with an octal value or with a symbolic string:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个系统调用，`int chmod(const char *path, mode_t mode);`但我们将集中在shell命令上。使用`chmod`的两种常见方法是使用八进制值或使用符号字符串：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The base-8 (''octal'') digits describe the permissions for each role: The user
    who owns the file, the group and everyone else. The octal number is the sum of
    three values given to the three types of permission: read(4), write(2), execute(1)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于8（'八进制'）位数字描述了每个角色的权限：拥有文件的用户，组和其他人。八进制数是给三种权限的三个值的总和：读取（4），写入（2），执行（1）
- en: 'Example: chmod 755 myfile'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：chmod 755 myfile
- en: r + w + x = digit
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: r + w + x = 数字
- en: user has 4+2+1, full permission
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户具有4+2+1，完全权限
- en: group has 4+0+1, read and execute permission
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组具有4+0+1，读取和执行权限
- en: all users have 4+0+1, read and execute permission
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有用户都有4+0+1，读取和执行权限
- en: How do I read the permission string from ls?
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何从ls中读取权限字符串？
- en: 'Use `ls -l''. Note that the permissions will output in the format ''drwxrwxrwx''.
    The first character indicates the type of file type. Possible values for the first
    character:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ls -l'。请注意，权限将以'drwxrwxrwx'格式输出。第一个字符表示文件类型。第一个字符的可能值：
- en: (-) regular file
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （-）常规文件
- en: (d) directory
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （d）目录
- en: (c) character device file\
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （c）字符设备文件\
- en: (l) symbolic link
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （l）符号链接
- en: (p) pipe
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （p）管道
- en: (b) block device
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （b）块设备
- en: (s) socket
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （s）套接字
- en: What is sudo?
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是sudo？
- en: Use `sudo` to become the admin on the machine. e.g. Normally (unless explicitly
    specified in the '/etc/fstab' file, you need root access to mount a filesystem).
    `sudo` can be used to temporarily run a command as root (provided the user has
    sudo privileges)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`sudo`成为机器上的管理员。例如通常（除非在'/etc/fstab'文件中明确指定，您需要root访问权限才能挂载文件系统）。`sudo`可用于临时以root身份运行命令（前提是用户具有sudo权限）
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How do I change ownership of a file?
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何更改文件的所有权？
- en: Use `chown username filename`
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`chown用户名文件名`
- en: How do I set permissions from code?
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何从代码中设置权限？
- en: '`chmod(const char *path, mode_t mode);`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`chmod(const char *path, mode_t mode);`'
- en: Why are some files 'setuid'? What does this mean?
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么有些文件是'setuid'？这是什么意思？
- en: The set-user-ID-on-execution bit changes the user associated with the process
    when the file is run. This is typically used for commands that need to run as
    root but are executed by non-root users. An example of this is `sudo`
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行文件时，设置用户ID的位会更改与进程关联的用户。这通常用于需要以root身份运行但由非root用户执行的命令。一个例子是`sudo`
- en: The set-group-ID-on-execution changes the group under which the process is run.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行时设置组ID会更改进程所在的组。
- en: Why are they useful?
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它们为什么有用？
- en: The most common usecase is so that the user can have root(admin) access for
    the duration of the program.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的用例是用户可以在程序运行期间具有root（管理员）访问权限。
- en: What permissions does sudo run as ?
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: sudo以什么权限运行？
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The 's' bit means execute and set-uid; the effective userid of the process will
    be different from the parent process. In this example it will be root
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '''s''位表示执行和设置uid；进程的有效用户ID将与父进程不同。在这个例子中，它将是root'
- en: What's the difference between getuid() and geteuid()?
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: getuid（）和geteuid（）之间有什么区别？
- en: '`getuid` returns the real user id (zero if logged in as root)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getuid`返回真实用户ID（如果以root身份登录，则为零）'
- en: '`geteuid` returns the effective userid (zero if acting as root, e.g. due to
    the setuid flag set on a program)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`geteuid`返回有效用户ID（如果作为root运行，例如由于程序上设置了setuid标志，则为零）'
- en: How do I ensure only privileged users can run my code?
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何确保只有特权用户可以运行我的代码？
- en: Check the effective permissions of the user by calling `geteuid()`. A return
    value of zero means the program is running effectively as root.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过调用`geteuid()`来检查用户的有效权限。返回值为零表示程序有效地作为root运行。
- en: '[Go to File System: Part 4](https://github.com/angrave/SystemProgramming/wiki/File-System,-Part-4:-Working-with-directories)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[转到文件系统：第4部分](https://github.com/angrave/SystemProgramming/wiki/File-System,-Part-4:-Working-with-directories)'

- en: 'Synchronization Concepts: Review Questions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同步概念：复习问题
- en: Note thread-programming synchronization problems are on a separate wiki page.
    This page focuses on conceptual topics. Question numbers subject to change
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意，线程编程同步问题在另一页上。本页重点讨论概念性主题。问题编号可能会更改
- en: Q1
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q1
- en: What do each of the Coffman conditions mean? (e.g. can you provide a definition
    of each one)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Coffman条件的含义是什么？（例如，你能提供每个条件的定义吗）
- en: Hold and wait
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持有和等待
- en: Circular wait
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环等待
- en: No pre-emption
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无抢占
- en: Mutual exclusion
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互斥
- en: Q2
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q2
- en: 'Give a real life example of breaking each Coffman condition in turn. A situation
    to consider: Painters, paint and paint brushes. Hold and wait Circular wait No
    pre-emption Mutual exclusion'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 逐个举例打破每个Coffman条件的真实生活例子。一个需要考虑的情况：画家、油漆和画笔。持有和等待 循环等待 无抢占 互斥
- en: Q3
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3
- en: Identify when Dining Philosophers code causes a deadlock (or not). For example,
    if you saw the following code snippet which Coffman condition is not satisfied?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 确定餐馆哲学家代码何时导致死锁（或者不导致）。例如，如果你看到以下代码片段，哪个Coffman条件没有满足？
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Q4
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q4
- en: How many processes are blocked?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少进程被阻塞？
- en: P1 acquires R1
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P1获取R1
- en: P2 acquires R2
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P2获取R2
- en: P1 acquires R3
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P1获取R3
- en: P2 waits for R3
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P2等待R3
- en: P3 acquires R5
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P3获取R5
- en: P1 acquires R4
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P1获取R4
- en: P3 waits for R1
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P3等待R1
- en: P4 waits for R5
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P4等待R5
- en: P5 waits for R1
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: P5等待R1
- en: Q5
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q5
- en: How many of the following statements are true for the reader-writer problem?
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下哪些陈述对于读者-写者问题是真实的？
- en: There can be multiple active readers
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能有多个活跃的读者
- en: There can be multiple active writers
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能有多个活跃的写者
- en: When there is an active writer the number of active readers must be zero
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当有一个活跃的写者时，活跃的读者数量必须为零
- en: If there is an active reader the number of active writers must be zero
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有一个活跃的读者，活跃的写者数量必须为零
- en: A writer must wait until the current active readers have finished
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个写者必须等到当前活跃的读者完成
